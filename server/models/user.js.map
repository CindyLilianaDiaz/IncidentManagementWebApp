{"version":3,"sources":["models/user.ts"],"names":[],"mappings":";AAAA;;;;;EAKE;AACF,IAAO,QAAQ,WAAW,UAAU,CAAC,CAAC;AACtC,IAAO,qBAAqB,WAAW,yBAAyB,CAAC,CAAC;AAElE,2BAA2B;AAC3B,IAAI,UAAU,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC;IACjC,QAAQ,EAAE;QACN,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,EAAE;QACX,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,sBAAsB;KACnC;IACD,QAAQ,EAAE;QACN,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,EAAE;QACX,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,sBAAsB;KACnC;IACD,KAAK,EAAE;QACH,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,EAAE;QACX,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,mBAAmB;KAChC;IACD,WAAW,EAAE;QACT,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,EAAE;QACX,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,0BAA0B;KACvC;IACD,IAAI,EAAE;QACF,IAAI,EAAE,MAAM;QACZ,IAAI,EAAG,CAAC,OAAO,EAAE,UAAU,CAAC;QAC5B,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,kBAAkB;KAC/B;IACD,OAAO,EAAE;QACL,IAAI,EAAE,IAAI;QACV,OAAO,EAAE,IAAI,CAAC,GAAG;KACpB;IACD,OAAO,EAAE;QACL,IAAI,EAAE,IAAI;QACV,OAAO,EAAE,IAAI,CAAC,GAAG;KACpB;CACJ,EACG,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC;AAEhC,IAAI,OAAO,GAAG,CAAC,EAAC,oBAAoB,EAAE,gBAAgB,EAAC,CAAC,CAAC;AACzD,UAAU,CAAC,MAAM,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAAC;AAClD,gDAAgD;AACrC,YAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC","file":"models/user.js","sourcesContent":["/* \n    File Name: users.ts \n    Authors: Cindy Diaz, Hae Yeon Kang\n    Website Name: Manage Support Website\n    File Description: Schema Model for users\n*/\nimport mongoose = require('mongoose');\nimport passportLocalMongoose = require('passport-local-mongoose');\n\n// DEFINE THE OBJECT SCHEMA\nvar userSchema = new mongoose.Schema({\n    username: {\n        type: String,\n        default: '',\n        trim: true,\n        required: 'username is required'\n    },\n    password: {\n        type: String,\n        default: '',\n        trim: true,\n        required: 'password is required'\n    },\n    email: {\n        type: String,\n        default: '',\n        trim: true,\n        required: 'email is required'\n    },\n    displayName: {\n        type: String,\n        default: '',\n        trim: true,\n        required: 'Display Name is required'\n    },\n    type: {\n        type: String,\n        enum : ['Admin', 'Customer'],\n        trim: true,\n        required: 'Type is required'\n    },\n    created: {\n        type: Date,\n        default: Date.now\n    },\n    updated: {\n        type: Date,\n        default: Date.now\n    }\n},\n    { collection: 'userInfo' });\n\nvar options = ({missingPasswordError: \"Wrong password\"});\nuserSchema.plugin(passportLocalMongoose, options);\n// MAKE THIS PUBLIC SO THE CONTROLLER CAN SEE IT\nexport var User = mongoose.model('User', userSchema);"],"sourceRoot":"/source/"}