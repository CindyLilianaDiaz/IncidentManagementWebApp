{"version":3,"sources":["models/ticket.ts"],"names":[],"mappings":";AAAA;;;;;EAKE;AACF,IAAO,QAAQ,WAAW,UAAU,CAAC,CAAC;AAEtC,uBAAuB;AACvB,IAAI,YAAY,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC;IACnC,SAAS,EAAE;QACP,IAAI,EAAE,IAAI;QACV,OAAO,EAAE,IAAI,CAAC,GAAG;KACpB;IACD,SAAS,EAAC;QACN,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,EAAE;QACX,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,wBAAwB;KACrC;IACD,YAAY,EAAE;QACV,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,IAAI,CAAC,GAAG;KACpB;IACD,WAAW,EAAE;QACT,IAAI,EAAG,MAAM;QACb,OAAO,EAAE,EAAE;QACX,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,0BAA0B;KACvC;IACD,iBAAiB,EAAE;QACf,IAAI,EAAG,MAAM;QACb,OAAO,EAAE,EAAE;QACX,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,gCAAgC;KAC7C;IACD,aAAa,EAAC;QACV,IAAI,EAAE,MAAM;QACZ,IAAI,EAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC;QAChC,OAAO,EAAG,KAAK;QACf,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,4BAA4B;KACzC;IACD,YAAY,EAAG;QACX,IAAI,EAAE,MAAM;QACZ,IAAI,EAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC;QAChC,OAAO,EAAG,KAAK;QACf,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,2BAA2B;KACxC;IACD,cAAc,EAAE;QACZ,IAAI,EAAE,MAAM;QACZ,IAAI,EAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACtB,OAAO,EAAG,CAAC;QACX,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,6BAA6B;KAC1C;IACD,YAAY,EAAE;QACV,IAAI,EAAG,MAAM;QACb,OAAO,EAAE,EAAE;QACX,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,2BAA2B;KACxC;IACD,aAAa,EAAE;QACX,IAAI,EAAG,MAAM;QACb,OAAO,EAAE,EAAE;QACX,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,4BAA4B;KACzC;IACD,uCAAuC;IACvC,iBAAiB,EAAG,CAAC;YACjB,WAAW,EAAG;gBACV,IAAI,EAAE,IAAI;gBACV,OAAO,EAAE,IAAI,CAAC,GAAG;aAChB;YACL,OAAO,EAAE,MAAM;YACf,YAAY,EAAG;gBACX,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAG,CAAC,KAAK,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,CAAC;gBAC7D,OAAO,EAAG,KAAK;gBACf,IAAI,EAAE,IAAI;gBACV,QAAQ,EAAE,2BAA2B;aACxC;SACJ,CAAC;CACL,CAAC,CAAC;AACH,qBAAqB;AACV,cAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC","file":"models/ticket.js","sourcesContent":["/* \n    File Name: tickets.ts \n    Authors: Cindy Diaz, Hae Yeon Kang\n    Website Name: Manage Support Website\n    File Description: Schema Model for support ticket\n*/\nimport mongoose = require('mongoose');\n\n// Define object schema\nvar ticketSchema = new mongoose.Schema({\n    createdOn: {\n        type: Date,\n        default: Date.now\n    },\n    createdBy:{\n        type: String,\n        default: '',\n        trim: true,\n        required: 'Created by is required'     \n    },\n    ticketNumber: {\n        type: String,\n        default: Date.now  \n    },\n    ticketTitle: {\n        type : String,\n        default: '',\n        trim: true,\n        required: 'Ticket Title is required'\n    },\n    ticketDescription: {\n        type : String,\n        default: '',\n        trim: true,\n        required: 'Ticket Description is required'\n    },\n    ticketUrgency:{\n        type: String,\n        enum : ['HIGH', 'MEDIUM', 'LOW'],\n        default : 'LOW',\n        trim: true,\n        required: 'Ticket Urgency is required'\n    },\n    ticketImpact : {\n        type: String,\n        enum : ['HIGH', 'MEDIUM', 'LOW'],\n        default : 'LOW',\n        trim: true,\n        required: 'Ticket Impact is required'\n    },\n    ticketPriority: {\n        type: Number,\n        enum : [1, 2, 3, 4, 5],\n        default : 5,\n        trim: true,\n        required: 'Ticket Priority is required'\n    },\n    customerName: {\n        type : String,\n        default: '',\n        trim: true,\n        required: 'Customer Name is required'\n    },\n    customerPhone: {\n        type : String,\n        default: '',\n        trim: true,\n        required: 'Customer Phone is required'\n    },\n    //Embedded document, incident narrative\n    incidentNarrative : [{\n        commentDate : {\n            type: Date,\n            default: Date.now\n            },\n        comment: String,\n        ticketStatus : {\n            type: String,\n            enum : ['New', 'Picked Up', 'Assigned', 'Resolved', 'Closed'],\n            default : 'New',\n            trim: true,\n            required: 'Ticket Status is required'\n        }\n    }]\n});\n//Export ticket model\nexport var Ticket = mongoose.model('Ticket', ticketSchema);"],"sourceRoot":"/source/"}