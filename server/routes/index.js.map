{"version":3,"sources":["routes/index.ts"],"names":[],"mappings":"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","file":"routes/index.js","sourcesContent":["/* \n    File Name: index.ts \n    Authors: Cindy Diaz, Hae Yeon Kang\n    Website Name: Manage Support Website\n    File Description: Routing for index\n*/\nimport express = require('express');\n//Email  set up\nvar sendgrid = require('sendgrid')('xxxx', 'xxxxx');\nimport passport = require('passport');\n\nvar router = express.Router();\n\n// DB references\nimport userModel = require('../models/user');\nimport User = userModel.User;\n\n/* GET home,landing page */\nrouter.get('/', (req: express.Request, res: express.Response, next: any) => {\n    res.render('index', { \n        title: 'Home',\n        displayName: req.user ? req.user.displayName : ''\n    });\n});\n\n/* GET Registration page */\nrouter.get('/register', (req:express.Request, res: express.Response, next:any) => {\n    //Check if user is not login already\n    if(!req.user) {\n        res.render('register', {\n            title: 'Register',\n            messages: req.flash('registerMessage'),\n            displayName: req.user ? req.user.displayName : '',\n            type: req.user? req.user.type : ''\n        });\n        return;\n    } else {\n        return res.redirect('/');\n    }\n});\n\n/* Process Registration Request */\nrouter.post('/register', (req:express.Request, res: express.Response, next:any) => {\n    //Attempt to register user\n    User.register(new User(\n       { username: req.body.username,\n         password: req.body.password,\n         email: req.body.email,\n         displayName: req.body.displayName,\n         type: req.body.type\n       }), req.body.password, (err) => {\n           if(err) {\n               console.log('Error Inserting New Data');\n               if(err.name == 'UserExistsError') {\n               req.flash('registerMessage', 'Registration Error: User Already Exists!');\n               }\n               return res.render('register', {\n                    title: 'Register',\n                    messages: req.flash('registerMessage'),\n                    displayName: req.user ? req.user.displayName : '',\n                    type: req.user? req.user.type : ''\n                });\n           }\n           //If registration is successful\n           return passport.authenticate('local')(req, res, ()=>{\n              res.redirect('/tickets'); \n           });\n       });\n});\n\n/* Process Logout Request */\nrouter.get('/logout', (req:express.Request, res: express.Response) => { \n    req.logOut();\n    res.redirect('/');\n});\n\n/* GET contact page. */\nrouter.get('/contact', (req: express.Request, res: express.Response, next: any) => {\n    req.flash('successmessage', 'Thank You. Your message has been sent.');\n    req.flash('errormessage','An Error has occurred.');\n    res.render('contact', { \n        title: 'Contact', \n        messages: null,\n        displayName: req.user ? req.user.displayName : '',\n        type: req.user? req.user.type : ''\n    });\n});\n\n/* Processing  contact page*/\nrouter.post('/contact', (req: express.Request, res: express.Response, next: any) => {\n    sendgrid.send({\n        to: 'cindy.liliana.diaz@hotmail.com',\n        from: req.body.email,\n        subject: 'Contact Form Submission',\n        text: \"This message has been sent from the contact form at [MongoDB Demo]\\r\\n\\r\\n\" +\n        \"Name: \" + req.body.name + \"\\r\\n\\r\\n\" +\n        \"Phone: \" + req.body.phone + \"\\r\\n\\r\\n\" +\n        req.body.message,\n        html: \"This message has been sent from the contact form at [MongoDB Demo]<br><br>\" +\n        \"<strong>Name:</strong> \" + req.body.name + \"<br><br>\" +\n        \"<strong>Phone:</strong> \" + req.body.phone + \"<br><br>\" +\n        req.body.message\n    },\n        (err, json) => {\n            if (err) { res.status(500).json('error'); \n            }\n            res.render('contact', { \n                title: 'Contact',\n                messages: req.flash('successmessage')\n         });\n\n        });\n});\n\n/* GET Login Page */\nrouter.get('/login', (req:express.Request, res: express.Response, next:any) => {\n    //Check if user is login\n    if(!req.user) {\n        res.render('login', {\n            title: 'Login',\n            messages: req.flash('loginMessage'),\n            displayName: req.user ? req.user.displayName : '',\n            type: req.user? req.user.type : ''\n        });\n        return;\n    } else {\n        return res.redirect('/tickets');\n    }\n});\n\n/* Process Login Request */\nrouter.post('/login', passport.authenticate('local', {\n    successRedirect: '/tickets',\n    failureRedirect: '/login',\n    failureFlash: true\n}));\n\n//Export contents\nmodule.exports = router;"],"sourceRoot":"/source/"}