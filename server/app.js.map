{"version":3,"sources":["app.ts"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["/// <reference path = \"./_reference.ts\"/>\n/* \n    File Name: app.ts \n    Authors: Cindy Diaz, Hae Yeon Kang\n    Website Name: Manage Support Website\n    File Description: Setup for our application\n*/\nimport express = require('express');\nimport path = require('path');\nvar favicon = require('serve-favicon');\nimport logger = require('morgan');\nimport cookieParser = require('cookie-parser');\nimport bodyParser = require('body-parser');\n//Add mongoose\nimport mongoose = require('mongoose');\n\n//Components for user authentication\nimport userModel = require('./models/user');\nimport User = userModel.User;\nimport session = require('express-session');\n\n//Flash messages\nimport flash = require('connect-flash');\nimport passport = require('passport');\nimport passportLocal = require('passport-local');\nimport LocalStrategy = passportLocal.Strategy;\n\n//Import objects namespace\nimport * as objects from './objects/customerror';\nimport CustomError = objects.CustomError;\nvar myerror = new CustomError();\n//Declare routing\nvar routes = require('./routes/index');\nvar users = require('./routes/users');\nvar tickets = require('./routes/tickets');\n\nvar app = express();\n\n//View engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'ejs');\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\n//Initialize Session\napp.use(session({\n    secret: 'someSecret',\n    saveUninitialized: false,\n    resave: true\n}));\napp.use(passport.initialize());\napp.use(passport.session());\n\n//Initialize Flash Messages\napp.use(flash());\n\napp.use(express.static(path.join(__dirname, '../public')));\n\n//Passport config\npassport.use(new LocalStrategy(User.authenticate()));\npassport.serializeUser(User.serializeUser());\npassport.deserializeUser(User.deserializeUser());\n\n//Route Definitions\napp.use('/', routes);\napp.use('/tickets', tickets);\napp.use('/users', users);\n\n\n//Connect to mongodb with mongoose\nvar DB = require('./config/db');\nmongoose.connect(DB.url);\n\n//Check connection\nvar db: mongoose.Connection = mongoose.connection;\ndb.on('error', console.error.bind(console, 'Connection Error: '));\ndb.once('open', function(callback) {\n    console.log('Connected to mongoLab');\n});\n\n\n//Catch 404 and forward to error handler\napp.use((req: express.Request, res: express.Response, next: any) => {\n    var error = new CustomError('Not Found');\n    error.status = 404;\n    next(error);\n});\n\n// error handlers\n\n// development error handler\n// will print stacktrace\nif (app.get('env') === 'development') {\n    app.use((error: CustomError, req: express.Request, res: express.Response, next: any) => {\n        res.status(error.status || 500);\n        res.render('error', {\n            message: error.message,\n            error: error\n        });\n    });\n}\n\n// production error handler\n// no stacktraces leaked to user\napp.use((error: CustomError, req: express.Request, res: express.Response, next: any) => {\n    res.status(error.status || 500);\n    res.render('error', {\n        message: error.message,\n        error: {}\n    });\n});\n\n\nmodule.exports = app;\n"],"sourceRoot":"/source/"}